11-26 11:58:00 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.message.Message.getSQLException(Message.java:152)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1328)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1303)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:376)
	at org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:337)
	at org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:337)
	at org.apache.commons.dbcp.PoolableConnectionFactory.activateObject(PoolableConnectionFactory.java:703)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1164)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:137)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.lambda$addHitsAndSetAccesTime$4(JDBCQuotaStore.java:665)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-26 11:58:00 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Database is already closed (to disable automatic closing at VM shutdown, add ";DB_CLOSE_ON_EXIT=FALSE" to the db URL) [90121-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.message.Message.getSQLException(Message.java:152)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1328)
	at org.h2.jdbc.JdbcConnection.checkClosed(JdbcConnection.java:1303)
	at org.h2.jdbc.JdbcConnection.getAutoCommit(JdbcConnection.java:376)
	at org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:337)
	at org.apache.commons.dbcp.DelegatingConnection.getAutoCommit(DelegatingConnection.java:337)
	at org.apache.commons.dbcp.PoolableConnectionFactory.activateObject(PoolableConnectionFactory.java:703)
	at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:1164)
	at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:106)
	at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:1044)
	at org.springframework.jdbc.datasource.DataSourceTransactionManager.doBegin(DataSourceTransactionManager.java:261)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.startTransaction(AbstractPlatformTransactionManager.java:400)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.getTransaction(AbstractPlatformTransactionManager.java:373)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:137)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.lambda$addHitsAndSetAccesTime$4(JDBCQuotaStore.java:665)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-26 11:58:00 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Deadlock detected. The current transaction was rolled back. Details: 
Session #6 (user: SA) is waiting to lock PUBLIC.TILESET while locking PUBLIC.TILEPAGE (exclusive).
Session #7 (user: SA) is waiting to lock PUBLIC.TILEPAGE while locking PUBLIC.TILESET (exclusive).; SQL statement:
SELECT FREQUENCY_OF_USE, LAST_ACCESS_TIME_MINUTES, FILL_FACTOR, NUM_HITS FROM TILEPAGE WHERE KEY = ? [40001-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.table.TableData.doLock(TableData.java:489)
	at org.h2.table.TableData.lock(TableData.java:436)
	at org.h2.table.TableFilter.lock(TableFilter.java:118)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:545)
	at org.h2.command.dml.Query.query(Query.java:236)
	at org.h2.command.CommandContainer.query(CommandContainer.java:82)
	at org.h2.command.Command.executeQueryLocal(Command.java:142)
	at org.h2.command.Command.executeQuery(Command.java:123)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:98)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:223)
	at org.geowebcache.diskquota.jdbc.SimpleJdbcTemplate.queryForOptionalObject(SimpleJdbcTemplate.java:43)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getPageStats(JDBCQuotaStore.java:646)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.access$200(JDBCQuotaStore.java:63)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$7.upsertTilePageFillFactor(JDBCQuotaStore.java:522)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$7.doInTransactionWithoutResult(JDBCQuotaStore.java:470)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.addToQuotaAndTileCounts(JDBCQuotaStore.java:456)
	at org.geoserver.gwc.ConfigurableQuotaStore.addToQuotaAndTileCounts(ConfigurableQuotaStore.java:105)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.commit(QueuedQuotaUpdatesConsumer.java:307)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.checkAggregatedTimeout(QueuedQuotaUpdatesConsumer.java:289)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.checkAggregatedTimeouts(QueuedQuotaUpdatesConsumer.java:246)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.call(QueuedQuotaUpdatesConsumer.java:202)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.call(QueuedQuotaUpdatesConsumer.java:36)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-27 10:09:37 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Deadlock detected. The current transaction was rolled back. Details: 
Session #3 (user: SA) is waiting to lock PUBLIC.TILEPAGE while locking PUBLIC.TILESET (exclusive).
Session #4 (user: SA) is waiting to lock PUBLIC.TILESET while locking PUBLIC.TILEPAGE (exclusive).; SQL statement:
SELECT KEY, LAYER_NAME, GRIDSET_ID, BLOB_FORMAT, PARAMETERS_ID FROM TILESET WHERE KEY = ? [40001-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.table.TableData.doLock(TableData.java:489)
	at org.h2.table.TableData.lock(TableData.java:436)
	at org.h2.table.TableFilter.lock(TableFilter.java:118)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:545)
	at org.h2.command.dml.Query.query(Query.java:236)
	at org.h2.command.CommandContainer.query(CommandContainer.java:82)
	at org.h2.command.Command.executeQueryLocal(Command.java:142)
	at org.h2.command.Command.executeQuery(Command.java:123)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:98)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:223)
	at org.geowebcache.diskquota.jdbc.SimpleJdbcTemplate.queryForOptionalObject(SimpleJdbcTemplate.java:43)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getTileSetByIdInternal(JDBCQuotaStore.java:396)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getOrCreateTileSet(JDBCQuotaStore.java:423)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$QuotaStoreCallback.doInTransaction(JDBCQuotaStore.java:858)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.lambda$addHitsAndSetAccesTime$4(JDBCQuotaStore.java:665)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-27 11:59:41 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Deadlock detected. The current transaction was rolled back. Details: 
Session #5 (user: SA) is waiting to lock PUBLIC.TILESET while locking PUBLIC.TILEPAGE (exclusive).
Session #3 (user: SA) is waiting to lock PUBLIC.TILEPAGE while locking PUBLIC.TILESET (exclusive).; SQL statement:
SELECT FREQUENCY_OF_USE, LAST_ACCESS_TIME_MINUTES, FILL_FACTOR, NUM_HITS FROM TILEPAGE WHERE KEY = ? [40001-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.table.TableData.doLock(TableData.java:489)
	at org.h2.table.TableData.lock(TableData.java:436)
	at org.h2.table.TableFilter.lock(TableFilter.java:118)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:545)
	at org.h2.command.dml.Query.query(Query.java:236)
	at org.h2.command.CommandContainer.query(CommandContainer.java:82)
	at org.h2.command.Command.executeQueryLocal(Command.java:142)
	at org.h2.command.Command.executeQuery(Command.java:123)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:98)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:223)
	at org.geowebcache.diskquota.jdbc.SimpleJdbcTemplate.queryForOptionalObject(SimpleJdbcTemplate.java:43)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getPageStats(JDBCQuotaStore.java:646)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.access$200(JDBCQuotaStore.java:63)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$7.upsertTilePageFillFactor(JDBCQuotaStore.java:522)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$7.doInTransactionWithoutResult(JDBCQuotaStore.java:470)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.addToQuotaAndTileCounts(JDBCQuotaStore.java:456)
	at org.geoserver.gwc.ConfigurableQuotaStore.addToQuotaAndTileCounts(ConfigurableQuotaStore.java:105)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.commit(QueuedQuotaUpdatesConsumer.java:307)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.checkAggregatedTimeout(QueuedQuotaUpdatesConsumer.java:289)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.checkAggregatedTimeouts(QueuedQuotaUpdatesConsumer.java:246)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.call(QueuedQuotaUpdatesConsumer.java:202)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.call(QueuedQuotaUpdatesConsumer.java:36)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-28 09:49:41 jdbc[2]: SQLException
org.h2.jdbc.JdbcSQLException: Deadlock detected. The current transaction was rolled back. Details: 
Session #4 (user: SA) is waiting to lock PUBLIC.TILEPAGE while locking PUBLIC.TILESET (exclusive).
Session #3 (user: SA) is waiting to lock PUBLIC.TILESET while locking PUBLIC.TILEPAGE (exclusive).; SQL statement:
SELECT KEY, LAYER_NAME, GRIDSET_ID, BLOB_FORMAT, PARAMETERS_ID FROM TILESET WHERE KEY = ? [40001-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.table.TableData.doLock(TableData.java:489)
	at org.h2.table.TableData.lock(TableData.java:436)
	at org.h2.table.TableFilter.lock(TableFilter.java:118)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:545)
	at org.h2.command.dml.Query.query(Query.java:236)
	at org.h2.command.CommandContainer.query(CommandContainer.java:82)
	at org.h2.command.Command.executeQueryLocal(Command.java:142)
	at org.h2.command.Command.executeQuery(Command.java:123)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:98)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:223)
	at org.geowebcache.diskquota.jdbc.SimpleJdbcTemplate.queryForOptionalObject(SimpleJdbcTemplate.java:43)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getTileSetByIdInternal(JDBCQuotaStore.java:396)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getOrCreateTileSet(JDBCQuotaStore.java:423)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$QuotaStoreCallback.doInTransaction(JDBCQuotaStore.java:858)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.lambda$addHitsAndSetAccesTime$4(JDBCQuotaStore.java:665)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-28 09:49:59 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Deadlock detected. The current transaction was rolled back. Details: 
Session #3 (user: SA) is waiting to lock PUBLIC.TILEPAGE while locking PUBLIC.TILESET (exclusive).
Session #4 (user: SA) is waiting to lock PUBLIC.TILESET while locking PUBLIC.TILEPAGE (exclusive).; SQL statement:
SELECT KEY, LAYER_NAME, GRIDSET_ID, BLOB_FORMAT, PARAMETERS_ID FROM TILESET WHERE KEY = ? [40001-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.table.TableData.doLock(TableData.java:489)
	at org.h2.table.TableData.lock(TableData.java:436)
	at org.h2.table.TableFilter.lock(TableFilter.java:118)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:545)
	at org.h2.command.dml.Query.query(Query.java:236)
	at org.h2.command.CommandContainer.query(CommandContainer.java:82)
	at org.h2.command.Command.executeQueryLocal(Command.java:142)
	at org.h2.command.Command.executeQuery(Command.java:123)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:98)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:223)
	at org.geowebcache.diskquota.jdbc.SimpleJdbcTemplate.queryForOptionalObject(SimpleJdbcTemplate.java:43)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getTileSetByIdInternal(JDBCQuotaStore.java:396)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getOrCreateTileSet(JDBCQuotaStore.java:423)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$QuotaStoreCallback.doInTransaction(JDBCQuotaStore.java:858)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.lambda$addHitsAndSetAccesTime$4(JDBCQuotaStore.java:665)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
11-28 09:50:13 jdbc[3]: SQLException
org.h2.jdbc.JdbcSQLException: Deadlock detected. The current transaction was rolled back. Details: 
Session #3 (user: SA) is waiting to lock PUBLIC.TILESET while locking PUBLIC.TILEPAGE (exclusive).
Session #4 (user: SA) is waiting to lock PUBLIC.TILEPAGE while locking PUBLIC.TILESET (exclusive).; SQL statement:
SELECT FREQUENCY_OF_USE, LAST_ACCESS_TIME_MINUTES, FILL_FACTOR, NUM_HITS FROM TILEPAGE WHERE KEY = ? [40001-119]
	at org.h2.message.Message.getSQLException(Message.java:106)
	at org.h2.message.Message.getSQLException(Message.java:117)
	at org.h2.message.Message.getSQLException(Message.java:76)
	at org.h2.table.TableData.doLock(TableData.java:489)
	at org.h2.table.TableData.lock(TableData.java:436)
	at org.h2.table.TableFilter.lock(TableFilter.java:118)
	at org.h2.command.dml.Select.queryWithoutCache(Select.java:545)
	at org.h2.command.dml.Query.query(Query.java:236)
	at org.h2.command.CommandContainer.query(CommandContainer.java:82)
	at org.h2.command.Command.executeQueryLocal(Command.java:142)
	at org.h2.command.Command.executeQuery(Command.java:123)
	at org.h2.jdbc.JdbcPreparedStatement.executeQuery(JdbcPreparedStatement.java:98)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:96)
	at org.springframework.jdbc.core.JdbcTemplate$1.doInPreparedStatement(JdbcTemplate.java:678)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:669)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:694)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:748)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:216)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.query(NamedParameterJdbcTemplate.java:223)
	at org.geowebcache.diskquota.jdbc.SimpleJdbcTemplate.queryForOptionalObject(SimpleJdbcTemplate.java:43)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.getPageStats(JDBCQuotaStore.java:646)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.access$200(JDBCQuotaStore.java:63)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$7.upsertTilePageFillFactor(JDBCQuotaStore.java:522)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore$7.doInTransactionWithoutResult(JDBCQuotaStore.java:470)
	at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
	at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
	at org.geowebcache.diskquota.jdbc.JDBCQuotaStore.addToQuotaAndTileCounts(JDBCQuotaStore.java:456)
	at org.geoserver.gwc.ConfigurableQuotaStore.addToQuotaAndTileCounts(ConfigurableQuotaStore.java:105)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.commit(QueuedQuotaUpdatesConsumer.java:307)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.checkAggregatedTimeout(QueuedQuotaUpdatesConsumer.java:289)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.checkAggregatedTimeouts(QueuedQuotaUpdatesConsumer.java:246)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.call(QueuedQuotaUpdatesConsumer.java:202)
	at org.geowebcache.diskquota.QueuedQuotaUpdatesConsumer.call(QueuedQuotaUpdatesConsumer.java:36)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
